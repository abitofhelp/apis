load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_proto_grpc_grpc_gateway//:defs.bzl", "gateway_grpc_library", "gateway_openapiv2_compile")

# rules_proto (-> proto descriptor set):
#  Building a proto_library creates a file named xxxxx-descriptor-set.proto.bin,
#  which is the descriptor set's binary file.  One use case for the descriptor
#  set is generating code without having to parse .proto files.
proto_library(
    name = "hello_world_proto",
    srcs = ["hello_world.proto"],
    visibility = ["//visibility:public"],
    deps = [
        "//proto/enum/access_tier/v5:access_tier_proto",
        "@com_google_protobuf//:timestamp_proto",
        "@googleapis//google/api:annotations_proto",
    ],
)

# rules_proto_grpc (-> proto descriptor set, pb files, grpc files, grpc-gateway files):
# This rule takes a proto descriptor set, generated by proto_library rule, and produces the following files:
# .a (static library):  It is an archive of object files that can be linked with other object file to form an executable
#                       or shared library.  Use 'go tool objdump' for disassembly and 'go tool nm' for listing symbols.
# .o (object file):     It contains machine code and data for a single compilation unit.  Use 'go tool objdump' for
#                       disassembly and 'go tool nm' for listing symbols.
# .x (symbol file):     It contain information about the symbols defined by a go_library (not the implementation) as well
#                       as static analysis information collected by nogo (if you use it),
# .pb.go (protoBuf):    It contains generated ProtoBuf Go code.
# .pb.gw.go (gateway):  It contains generated HTTP proxy server Go code.
# _grpc.pb.go (grpc):   It contains generated gRPC Go server and client stubs.
gateway_grpc_library(
    name = "hello_world",
    importpath = "github.com/abitofhelp/apis/proto/hello_world/v1",
    protos = ["hello_world_proto"],
    visibility = ["//visibility:public"],
    deps = [
        "//proto/enum/access_tier/v5:access_tier",
        "@com_github_grpc_ecosystem_grpc_gateway_v2//runtime",
        "@com_github_grpc_ecosystem_grpc_gateway_v2//utilities",
        #"@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//grpclog",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_genproto_googleapis_api//annotations",
    ],
)

alias(
    name = "go_default_library",
    actual = ":hello_world",
    visibility = ["//visibility:public"],
)

# rules_proto_grpc_grpc_gateway (-> OpenApi json files):
# This rule takes a service's proto descriptor, generated by proto_library rule, and generates
# gRPC-Gateway OpenAPI v2 .json files.
gateway_openapiv2_compile(
    name = "hello_world_openapi",
    protos = ["//proto/enum/access_tier/v5:access_tier_proto"],
)
